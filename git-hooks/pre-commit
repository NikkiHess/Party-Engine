#!/bin/sh

cd "$(git rev-parse --show-toplevel)" || exit 1

errors=0

# copies this pre-commit file to git-hooks/pre-commit
copy_precommit() {
    # define the name of the pre-commit hook file
    copy_location="git-hooks/pre-commit"

    # copy the script to the pre-commit hook location
    cp "$0" "$copy_location"

    # stage the pre-commit hook for commit
    git add "$copy_location"
}

# check if RECORDING_MODE is set to true in Helper.h
# returns 1 if the error occurred
check_recording_mode() {
    local helper_file="dependencies/Helper.h" # path to Helper.h

    local line=$(grep -n "inline static const bool RECORDING_MODE = true;" "$helper_file" | cut -f1 -d:)
    if [ -n "$line" ]; then
        echo "- RECORDING_MODE == true in Helper.h. Please set it to false."
        return 1
    fi
    return 0
}

# check if OSX_DEBUGPATH == 1 in GameEngine.cpp
# returns 1 if the error occurred
check_osx_debugpath() {
    local game_engine_file="src/GameEngine.cpp" # path to GameEngine.cpp
    local target_line='#define OSX_DEBUGPATH 1'

    # Using grep to search for the target line without comment signs in front of it
    # If the line is found, grep returns 0 (success), else it returns 1 (no match)
    if grep -qP "^[[:blank:]]*${target_line}" "$game_engine_file"; then
        # If the line with required pattern is not found, the line might be commented out or the file altered
        echo "- OSX_DEBUGPATH == 1 in GameEngine.cpp. Please set it to 0."
        return 1
    fi
    return 0
}

# check if COLLIDER_DEBUG is defined in Artist.cpp
# returns 1 if the error occurred
check_collider_debug() {
    local artist_file="src/visuals/Artist.cpp" # path to Artist.cpp

    if grep -q "#define COLLIDER_DEBUG 1" "$artist_file"; then
        echo "- COLLIDER_DEBUG == 1 in Artist.cpp. Please set it to 0."
        return 1
    fi
    return 0
}

# copy the pre-commit file to the repo
copy_precommit

# run checks and capture output in variables to delay printing
recording_mode_check=$(check_recording_mode 2>&1)
recording_mode_status=$?

osx_debugpath_check=$(check_osx_debugpath 2>&1)
osx_debugpath_status=$?

collider_debug_check=$(check_collider_debug 2>&1)
collider_debug_status=$?

# update errors count based on check statuses
errors=$((wsl_def_status + recording_mode_status + osx_debugpath_status + collider_debug_status))

# if there were any errors, print the general message, then the specific messages.
if [ $errors -ne 0 ]; then
    if [ $errors -eq 1 ]; then
        echo "$errors pre-commit error has occurred:"
    else
        echo "$errors pre-commit errors have occurred:"
    fi
    echo ""
    
    [ $recording_mode_status -ne 0 ] && echo "$recording_mode_check"
    [ $osx_debugpath_status -ne 0 ] && echo "$osx_debugpath_check"
    [ $collider_debug_status -ne 0 ] && echo "$collider_debug_check"
    exit 1
fi

exit 0